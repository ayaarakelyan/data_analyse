# -*- coding: utf-8 -*-
"""Normal distribution or Gaussian distribution

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zqFZafKItcahRQdFfheoY5HpY_LfXCy9
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import norm
from matplotlib.ticker import FuncFormatter

# For Google Colab
from google.colab import files
uploaded = files.upload()
data = pd.read_excel(open('выручка.xlsx', 'rb'), header=0)  # Ensure the header is correctly defined

# Set the style of seaborn
sns.set(style="whitegrid")

# Data for Gaussian distribution
deviation_data = data['откл по Выручке за 9m23, %']

# Fit a normal distribution to the data
mu, std = norm.fit(deviation_data)

# Plot the histogram
plt.figure(figsize=(10,6))
ax = sns.histplot(deviation_data, bins=20, kde=False, color='green', stat='count')

# Calculate the Gaussian distribution (PDF)
xmin, xmax = ax.set_xlim(-0.9 , 1.7)
x = np.linspace(xmin, xmax, 100)
p = norm.pdf(x, mu, std)

peak_height = 18
scale_factor = peak_height / max(p)

# Plot the Gaussian distribution
ax.plot(x, p*scale_factor, 'k', linewidth=2)

title = "Fit results: mu = {:.2f},  std = {:.2f}".format(mu, std)
plt.title(title)

# Format x-axis as percentages
def to_percent(x, _):
    return '{:.0f}%'.format(x * 100)

# Apply the percentage formatter to the x-axis
ax.xaxis.set_major_formatter(FuncFormatter(to_percent))

custom_ticks = np.array([-0.9, -0.7, -0.5, -0.3, -0.1, 0, 0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7])
custom_labels = ['-90%', '-70%', '-50%', '-30%', '-10%', '0', '10%', '30%', '50%', '70%', '90%', '110%', '130%', '150%', '170%']
ax.set_xticks(custom_ticks)
ax.set_xticklabels(custom_labels)

plt.grid(False)  # Remove grid lines
plt.xlabel('Отклонение по Выручке (%)')
plt.ylabel('Количество ЦФО')

plt.yticks(np.arange(0, 19, 1))
# Show the plot
plt.show()